{"ast":null,"code":"var _jsxFileName = \"/home/nithinkumar/Desktop/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport EmailField from './Components/EmailField';\nimport PasswordField from './Components/PasswordField';\nimport LanguageSelector from './Components/LanguageSelector';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [loginMessage, setLoginMessage] = useState('');\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n  const handleLogin = () => {\n    if (emailValid && password) {\n      setLoginMessage('Login successful!');\n    } else {\n      setLoginMessage('Please enter a valid email and password.');\n    }\n  };\n  const handleForgotPassword = () => {\n    // Implement your logic here for the \"forgot password\" functionality\n    setShowForgotPassword(true); // For demonstration, just toggling a state variable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${process.env.PUBLIC_URL}/logo.png`,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailField, {\n      email: email,\n      setEmail: setEmail,\n      setEmailValid: setEmailValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleForgotPassword,\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), showForgotPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-password-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Forgot password functionality is under development.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), loginMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loginMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bV6kKjROvjRwkJhlb4PDYDKM1wU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EmailField","PasswordField","LanguageSelector","jsxDEV","_jsxDEV","App","_s","email","setEmail","password","setPassword","emailValid","setEmailValid","loginMessage","setLoginMessage","showForgotPassword","setShowForgotPassword","handleLogin","handleForgotPassword","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/nithinkumar/Desktop/my-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EmailField from './Components/EmailField';\nimport PasswordField from './Components/PasswordField';\nimport LanguageSelector from './Components/LanguageSelector';\nimport './App.css';\n\nconst App = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [loginMessage, setLoginMessage] = useState('');\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const handleLogin = () => {\n    if (emailValid && password) {\n      setLoginMessage('Login successful!');\n    } else {\n      setLoginMessage('Please enter a valid email and password.');\n    }\n  };\n\n  const handleForgotPassword = () => {\n    // Implement your logic here for the \"forgot password\" functionality\n    setShowForgotPassword(true); // For demonstration, just toggling a state variable\n  };\n\n  return (\n    <div className=\"App\">\n      <img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"Logo\" className=\"logo\" />\n      <EmailField email={email} setEmail={setEmail} setEmailValid={setEmailValid} />\n      <PasswordField password={password} setPassword={setPassword} />\n      <LanguageSelector />\n      <button onClick={handleLogin}>Login</button>\n      <div className=\"forgot-password\">\n        <button onClick={handleForgotPassword}>Forgot Password?</button>\n        {showForgotPassword && (\n          <div className=\"forgot-password-modal\">\n            {/* Implement your forgot password form or modal here */}\n            {/* For demonstration, just showing a message */}\n            <p>Forgot password functionality is under development.</p>\n          </div>\n        )}\n      </div>\n      {loginMessage && <p>{loginMessage}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}