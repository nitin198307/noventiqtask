{"ast":null,"code":"var _jsxFileName = \"/home/nithinkumar/Desktop/my-app/src/Components/EmailField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailField = ({\n  email,\n  setEmail,\n  setEmailValid\n}) => {\n  _s();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    validateEmail(email);\n  }, [email]);\n  const validateEmail = emailValue => {\n    const publicDomains = ['gmail.com', 'outlook.com', 'yahoo.com'];\n    const corporateDomains = ['noventiq.com', 'yourcorporate.com'];\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const domain = emailValue.split('@')[1];\n    if (!emailPattern.test(emailValue) || publicDomains.includes(domain) || !corporateDomains.includes(domain)) {\n      setError('Invalid email address');\n      setEmailValid(false);\n    } else {\n      setError('');\n      setEmailValid(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailField, \"AzAS/3yAg/YB9dPSCQtp4rtni54=\");\n_c = EmailField;\nexport default EmailField;\nvar _c;\n$RefreshReg$(_c, \"EmailField\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmailField","email","setEmail","setEmailValid","_s","error","setError","validateEmail","emailValue","publicDomains","corporateDomains","emailPattern","domain","split","test","includes","children","className","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/home/nithinkumar/Desktop/my-app/src/Components/EmailField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst EmailField = ({ email, setEmail, setEmailValid }) => {\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    validateEmail(email);\n  }, [email]);\n\n  const validateEmail = (emailValue) => {\n    const publicDomains = ['gmail.com', 'outlook.com', 'yahoo.com'];\n    const corporateDomains = ['noventiq.com', 'yourcorporate.com'];\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const domain = emailValue.split('@')[1];\n\n    if (!emailPattern.test(emailValue) || publicDomains.includes(domain) || !corporateDomains.includes(domain)) {\n      setError('Invalid email address');\n      setEmailValid(false);\n    } else {\n      setError('');\n      setEmailValid(true);\n    }\n  };\n\n  return (\n    <div>\n        <div className='d-flex'>\n          Email  \n        <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder=\"Enter your email\"\n      />\n        </div>\n      \n      {error && <span style={{ color: 'red' }}>{error}</span>}\n    </div>\n  );\n};\n\nexport default EmailField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdU,aAAa,CAACN,KAAK,CAAC;EACtB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMM,aAAa,GAAIC,UAAU,IAAK;IACpC,MAAMC,aAAa,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC;IAC/D,MAAMC,gBAAgB,GAAG,CAAC,cAAc,EAAE,mBAAmB,CAAC;IAC9D,MAAMC,YAAY,GAAG,kDAAkD;IACvE,MAAMC,MAAM,GAAGJ,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEvC,IAAI,CAACF,YAAY,CAACG,IAAI,CAACN,UAAU,CAAC,IAAIC,aAAa,CAACM,QAAQ,CAACH,MAAM,CAAC,IAAI,CAACF,gBAAgB,CAACK,QAAQ,CAACH,MAAM,CAAC,EAAE;MAC1GN,QAAQ,CAAC,uBAAuB,CAAC;MACjCH,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLG,QAAQ,CAAC,EAAE,CAAC;MACZH,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAKkB,SAAS,EAAC,QAAQ;MAAAD,QAAA,GAAC,OAExB,eAAAjB,OAAA;QACAmB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EAEPtB,KAAK,iBAAIN,OAAA;MAAM6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEX;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCIJ,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}