{"ast":null,"code":"// App.js\nimport React,{useState}from'react';import EmailField from'./Components/EmailField';import PasswordField from'./Components/PasswordField';import LanguageSelector from'./Components/LanguageSelector';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getBrowserLanguage=()=>{if(navigator&&navigator.language){const lang=navigator.language.split('-')[0];const supportedLanguages=['en','hi','ta'];return supportedLanguages.includes(lang)?lang:'en';}return'en';// Default to English if navigator.language is not available\n};const App=()=>{const[selectedLanguage,setSelectedLanguage]=useState(getBrowserLanguage());const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[emailValid,setEmailValid]=useState(false);const[loginMessage,setLoginMessage]=useState('');const handleLogin=()=>{if(emailValid&&password){setLoginMessage('Login successful!');}else{setLoginMessage('Please enter a valid email and password.');}};const isSubmitDisabled=!email||!password||!emailValid;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/logo.png\"),alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsx(EmailField,{email:email,setEmail:setEmail,setEmailValid:setEmailValid,selectedLanguage:selectedLanguage}),/*#__PURE__*/_jsx(PasswordField,{password:password,setPassword:setPassword,selectedLanguage:selectedLanguage}),/*#__PURE__*/_jsx(LanguageSelector,{setLanguage:setSelectedLanguage}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,disabled:isSubmitDisabled,children:\"Login\"}),loginMessage&&/*#__PURE__*/_jsx(\"p\",{children:loginMessage})]});};export default App;","map":{"version":3,"names":["React","useState","EmailField","PasswordField","LanguageSelector","jsx","_jsx","jsxs","_jsxs","getBrowserLanguage","navigator","language","lang","split","supportedLanguages","includes","App","selectedLanguage","setSelectedLanguage","email","setEmail","password","setPassword","emailValid","setEmailValid","loginMessage","setLoginMessage","handleLogin","isSubmitDisabled","className","children","src","concat","process","env","PUBLIC_URL","alt","setLanguage","onClick","disabled"],"sources":["/home/nithinkumar/Desktop/my-app/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from 'react';\nimport EmailField from './Components/EmailField';\nimport PasswordField from './Components/PasswordField';\nimport LanguageSelector from './Components/LanguageSelector';\nimport './App.css';\n\nconst getBrowserLanguage = () => {\n  if (navigator && navigator.language) {\n    const lang = navigator.language.split('-')[0];\n    const supportedLanguages = ['en', 'hi', 'ta'];\n    return supportedLanguages.includes(lang) ? lang : 'en';\n  }\n  return 'en'; // Default to English if navigator.language is not available\n};\n\nconst App = () => {\n  const [selectedLanguage, setSelectedLanguage] = useState(getBrowserLanguage());\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [loginMessage, setLoginMessage] = useState('');\n\n  const handleLogin = () => {\n    if (emailValid && password) {\n      setLoginMessage('Login successful!');\n    } else {\n      setLoginMessage('Please enter a valid email and password.');\n    }\n  };\n\n  const isSubmitDisabled = !email || !password || !emailValid;\n\n  return (\n    <div className=\"App\">\n            <img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"Logo\" className=\"logo\" />\n\n      <EmailField email={email} setEmail={setEmail} setEmailValid={setEmailValid} selectedLanguage={selectedLanguage} />\n      <PasswordField password={password} setPassword={setPassword} selectedLanguage={selectedLanguage} />\n      <LanguageSelector setLanguage={setSelectedLanguage} />\n      <button onClick={handleLogin} disabled={isSubmitDisabled}>Login</button>\n      {loginMessage && <p>{loginMessage}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CACtD,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,GAAIC,SAAS,EAAIA,SAAS,CAACC,QAAQ,CAAE,CACnC,KAAM,CAAAC,IAAI,CAAGF,SAAS,CAACC,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC7C,KAAM,CAAAC,kBAAkB,CAAG,CAAC,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CAC7C,MAAO,CAAAA,kBAAkB,CAACC,QAAQ,CAACH,IAAI,CAAC,CAAGA,IAAI,CAAG,IAAI,CACxD,CACA,MAAO,IAAI,CAAE;AACf,CAAC,CAED,KAAM,CAAAI,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjB,QAAQ,CAACQ,kBAAkB,CAAC,CAAC,CAAC,CAC9E,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACsB,UAAU,CAAEC,aAAa,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACwB,YAAY,CAAEC,eAAe,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAA0B,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIJ,UAAU,EAAIF,QAAQ,CAAE,CAC1BK,eAAe,CAAC,mBAAmB,CAAC,CACtC,CAAC,IAAM,CACLA,eAAe,CAAC,0CAA0C,CAAC,CAC7D,CACF,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAG,CAACT,KAAK,EAAI,CAACE,QAAQ,EAAI,CAACE,UAAU,CAE3D,mBACEf,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eACZxB,IAAA,QAAKyB,GAAG,IAAAC,MAAA,CAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,aAAY,CAACC,GAAG,CAAC,MAAM,CAACP,SAAS,CAAC,MAAM,CAAE,CAAC,cAEpFvB,IAAA,CAACJ,UAAU,EAACiB,KAAK,CAAEA,KAAM,CAACC,QAAQ,CAAEA,QAAS,CAACI,aAAa,CAAEA,aAAc,CAACP,gBAAgB,CAAEA,gBAAiB,CAAE,CAAC,cAClHX,IAAA,CAACH,aAAa,EAACkB,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAACL,gBAAgB,CAAEA,gBAAiB,CAAE,CAAC,cACnGX,IAAA,CAACF,gBAAgB,EAACiC,WAAW,CAAEnB,mBAAoB,CAAE,CAAC,cACtDZ,IAAA,WAAQgC,OAAO,CAAEX,WAAY,CAACY,QAAQ,CAAEX,gBAAiB,CAAAE,QAAA,CAAC,OAAK,CAAQ,CAAC,CACvEL,YAAY,eAAInB,IAAA,MAAAwB,QAAA,CAAIL,YAAY,CAAI,CAAC,EACnC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}