{"ast":null,"code":"var _jsxFileName = \"/home/nithinkumar/Desktop/my-app/src/Components/EmailField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailField = ({\n  email,\n  setEmail,\n  setEmailValid,\n  selectedLanguage\n}) => {\n  _s();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (email) {\n      validateEmail(email);\n    } else {\n      setError('');\n      setEmailValid(false);\n    }\n  }, [email]);\n  const validateEmail = emailValue => {\n    const publicDomains = ['gmail.com', 'outlook.com', 'yahoo.com'];\n    const corporateDomains = ['noventiq.com', 'yourcorporate.com'];\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const domain = emailValue.split('@')[1];\n    if (!emailPattern.test(emailValue) || publicDomains.includes(domain) || !corporateDomains.includes(domain)) {\n      setError('Invalid email address');\n      setEmailValid(false);\n    } else {\n      setError('');\n      setEmailValid(true);\n    }\n  };\n  const getPlaceholder = () => {\n    switch (selectedLanguage) {\n      case 'english':\n        return 'Enter your email';\n      case 'hindi':\n        return 'अपना ईमेल दर्ज करें';\n      // Add more cases for other languages as needed\n      default:\n        return 'Enter your email';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: getPlaceholder()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailField, \"AzAS/3yAg/YB9dPSCQtp4rtni54=\");\n_c = EmailField;\nexport default EmailField;\nvar _c;\n$RefreshReg$(_c, \"EmailField\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmailField","email","setEmail","setEmailValid","selectedLanguage","_s","error","setError","validateEmail","emailValue","publicDomains","corporateDomains","emailPattern","domain","split","test","includes","getPlaceholder","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/home/nithinkumar/Desktop/my-app/src/Components/EmailField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst EmailField = ({ email, setEmail, setEmailValid, selectedLanguage }) => {\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (email) {\n      validateEmail(email);\n    } else {\n      setError('');\n      setEmailValid(false);\n    }\n  }, [email]);\n\n  const validateEmail = (emailValue) => {\n    const publicDomains = ['gmail.com', 'outlook.com', 'yahoo.com'];\n    const corporateDomains = ['noventiq.com', 'yourcorporate.com'];\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const domain = emailValue.split('@')[1];\n\n    if (!emailPattern.test(emailValue) || publicDomains.includes(domain) || !corporateDomains.includes(domain)) {\n      setError('Invalid email address');\n      setEmailValid(false);\n    } else {\n      setError('');\n      setEmailValid(true);\n    }\n  };\n\n  const getPlaceholder = () => {\n    switch (selectedLanguage) {\n      case 'english':\n        return 'Enter your email';\n      case 'hindi':\n        return 'अपना ईमेल दर्ज करें';\n      // Add more cases for other languages as needed\n      default:\n        return 'Enter your email';\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        placeholder={getPlaceholder()}\n      />\n      {error && <span style={{ color: 'red' }}>{error}</span>}\n    </div>\n  );\n};\n\nexport default EmailField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,EAAE;MACTO,aAAa,CAACP,KAAK,CAAC;IACtB,CAAC,MAAM;MACLM,QAAQ,CAAC,EAAE,CAAC;MACZJ,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEX,MAAMO,aAAa,GAAIC,UAAU,IAAK;IACpC,MAAMC,aAAa,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC;IAC/D,MAAMC,gBAAgB,GAAG,CAAC,cAAc,EAAE,mBAAmB,CAAC;IAC9D,MAAMC,YAAY,GAAG,kDAAkD;IACvE,MAAMC,MAAM,GAAGJ,UAAU,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEvC,IAAI,CAACF,YAAY,CAACG,IAAI,CAACN,UAAU,CAAC,IAAIC,aAAa,CAACM,QAAQ,CAACH,MAAM,CAAC,IAAI,CAACF,gBAAgB,CAACK,QAAQ,CAACH,MAAM,CAAC,EAAE;MAC1GN,QAAQ,CAAC,uBAAuB,CAAC;MACjCJ,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLI,QAAQ,CAAC,EAAE,CAAC;MACZJ,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC;EAED,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQb,gBAAgB;MACtB,KAAK,SAAS;QACZ,OAAO,kBAAkB;MAC3B,KAAK,OAAO;QACV,OAAO,qBAAqB;MAC9B;MACA;QACE,OAAO,kBAAkB;IAC7B;EACF,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAEP,cAAc,CAAC;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACDtB,KAAK,iBAAIP,OAAA;MAAM8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEZ;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlDIL,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}